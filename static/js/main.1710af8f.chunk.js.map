{"version":3,"sources":["store/go/actions.js","store/go/reducer.js","store/go/redux.js","store/go/handlers.js","store/go/index.js","store/go/container.js","store/index.js","components/App/App.js","components/App/index.js","components/LandingPage/LandingPage.js","components/LandingPage/index.js","utils/ipfs-helpers.js","utils/orbit-helpers.js","utils/board.js","components/GamePage/GamePage.js","components/GamePage/index.js","components/LobbyPage/LobbyPage.js","components/LobbyPage/index.js","components/BoardIntersection/index.js","components/BoardIntersection/BoardIntersection.js","constants/index.js","components/BoardView/index.js","components/BoardView/BoardView.js","components/PassView/index.js","components/PassView/PassView.js","components/NewGame/index.js","components/NewGame/NewGame.js","components/CapturesView/index.js","components/CapturesView/CapturesView.js","components/ContainerView/ContainerView.js","components/NewGameDialog/NewGameDialog.js","components/NewGameDialog/index.js","components/IPFSPubSubChat/IPFSPubSubChat.js","components/IPFSPubSubChat/index.js","components/PageNavigation/PageNavigation.js","components/PageNavigation/index.js","components/PlayerProfile/PlayerProfile.js","components/PlayerProfile/index.js","serviceWorker.js","index.js"],"names":["playerProfileUpdated","createAction","_ref","peerId","playerName","playerEmoji","chatMessageReceived","_ref2","from","content","timestamp","selfPeerInfo","_ref3","peerInfo","gameInvitationRecieved","_ref4","gameInvitationAccepted","_ref5","nonce","players","handleActions","_handleActions","Object","defineProperty","state","payload","objectSpread","messages","toConsumableArray","concat","game","invitation","version","connect","go","router","actions","withHandlers","navigateTo","asyncToGenerator","regenerator_default","a","mark","_callee","path","wrap","_context","prev","next","history","push","stop","this","_x","apply","arguments","sendMessage","_callee2","room","message","_context2","JSON","stringify","action","broadcast","_x2","updatePlayerProfile","_ref6","_callee3","_context3","_x3","saveDTO","_ref8","_callee4","_ref7","db","dto","opponent","_context4","put","_id","sendTo","_x4","deleteDTO","_ref10","_callee5","_ref9","_context5","del","_x5","sendGameInvite","_ref11","_ref13","_callee6","_ref12","_context6","to","_x6","acceptGameInvite","_ref14","_ref16","_callee7","_ref15","_context7","_x7","store_go","reducer","container","compose","withRedux","createBrowserHistory","rootReducer","connectRouter","appReducers","persistConfig","key","blacklist","storage","store","createStore","persistReducer","combineReducers","composeWithDevTools","applyMiddleware","thunk","routerMiddleware","persistor","persistStore","App","react_default","createElement","es","integration_react","lib","Switch","Route","exact","render","components_LandingPage","components_LobbyPage","components_GamePage","Component","LandingPage","_this","className","particles_default","params","fps_limit","particles","number","value","density","enable","line_linked","distance","opacity","move","speed","anim","opacity_min","sync","polygon","scale","type","radius","url","inline","arrangement","draw","stroke","color","retina_detect","interactivity","events","onhover","mode","modes","bubble","size","Button_default","id","variant","onClick","props","ipfs","window","Ipfs","repo","EXPERIMENTAL","pubsub","config","Addresses","Swarm","getIPFS","Promise","resolve","reject","on","OrbitDB","require","getOrbitDB","orbitdb","abrupt","sent","undefined","playHistoryX","playHistoryY","Board","board","last_move_passed","in_atari","attempted_suicide","captures","capturesArrayBlack","capturesArrayWhite","moveCount","moveCountArray","last_move_undo","current_color","classCallCheck","getDataTransferObject","parse","create_board","m","i","j","EMPTY","reset","BLACK","switch_player","WHITE","pass","end_game","undo","length","_this$history$pop","pop","is_valid_state","n","play","captured","neighbors","get_adjacent_intersections","atari","self","_","each","group","get_group","turnBlack","turnWhite","isEmpty","stone","cloneDeep","visited","visited_list","queue","count","func","liberties","stones","Room","playerColorStringToInt","peerIdToProfileAttribute","attr","GamePage","ready","pathname","location","orbitDBAddress","replace","roomName","split","_ipfs","open","load","get","name","peer","_JSON$parse","data","console","log","_this2","setState","pollTillPresent","setInterval","_room$getPeers","_room$getPeers2","_colors","getPeers","slicedToArray","sort","you","colors","clearInterval","_this3","_this$props2","_this$state","components_PageNavigation","Paper_default","style","padding","marginBottom","components_PlayerProfile","components_BoardView","currentPlayer","onPlay","CircularProgress_default","LobbyPage","peers","handleChange","event","target","parsedMessage","newGameDB","gameAddress","create","replicate","overwrite","write","address","toString","isProfileReady","isLobbyReady","Grid_default","spacing","item","xs","md","map","components_IPFSPubSubChat","components_NewGameDialog","BoardIntersection","handleClick","row","col","top","left","backgroundColor","_PLAYER_ONE_COLOR","_PLAYER_TWO_COLOR","backgroundImage","_PLAYER_ONE_IMAGE","_PLAYER_TWO_IMAGE","classes","BoardView","intersections","components_BoardIntersection","assign","width","height","PassView","e","NewGame","reload","onReset","CapturesView","capturesArray","textCaptures","reduce","b","NewGameDialog","nextProps","keys","_this$props","Dialog_default","onClose","handleClose","aria-labelledby","aria-describedby","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","Math","random","autoFocus","React","IPFSPubSubChat","scrollToBottomOfChat","setTimeout","document","querySelector","scrollTop","scrollHeight","round","Date","getTime","chatMessage","List_default","maxHeight","overflowY","mood","ListItem_default","alignItems","ListItemText_default","primary","secondary","Fragment","Typography_default","component","display","flexWrap","TextField_default","label","fullWidth","onChange","margin","ResponsiveDrawer","mobileOpen","handleDrawerToggle","theme","drawer","toolbar","Divider_default","button","ListItemIcon_default","HomeOutlined_default","GamepadOutlined_default","root","CssBaseline_default","AppBar_default","position","appBar","Toolbar_default","IconButton_default","aria-label","menuButton","Menu_default","noWrap","Hidden_default","smUp","implementation","Drawer_default","anchor","direction","paper","drawerPaper","xsDown","children","withStyles","breakpoints","up","flexShrink","marginLeft","marginRight","mixins","flexGrow","unit","withTheme","PageNavigation","moods","PlayerProfile","safePlayerProfileUpdate","sendProfileToPeers","debounce","profile","substring","select","option","MenuItem_default","Boolean","hostname","match","ReactDOM","components_App","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.1710af8f.chunk.js","sourcesContent":["import { createAction } from \"redux-actions\";\n\nexport const playerProfileUpdated = createAction(\n  \"go/PLAYER_PROFILE_UPDATED\",\n  ({ peerId, playerName, playerEmoji }) => ({\n    peerId,\n    playerName,\n    playerEmoji\n  })\n);\n\nexport const chatMessageReceived = createAction(\n  \"go/CHAT_MESSAGE_RECEIVED\",\n  ({ from, content, timestamp }) => ({\n    from,\n    content,\n    timestamp\n  })\n);\n\nexport const selfPeerInfo = createAction(\n  \"go/SELF_PEER_INFO\",\n  ({ peerInfo }) => ({\n    peerInfo\n  })\n);\n\nexport const gameInvitationRecieved = createAction(\n  \"go/GAME_INVITATION_RECEIVED\",\n  ({ from }) => ({\n    from\n  })\n);\n\nexport const gameInvitationAccepted = createAction(\n  \"go/GAME_INVITATION_ACCEPTED\",\n  ({ nonce, players }) => ({\n    nonce,\n    players\n  })\n);\n","import { handleActions } from \"redux-actions\";\n\nimport {\n  selfPeerInfo,\n  gameInvitationRecieved,\n  gameInvitationAccepted,\n  playerProfileUpdated,\n  chatMessageReceived\n} from \"./actions\";\n\nconst initialState = {\n  version: 0,\n  players: {},\n  invitation: {},\n  game: {},\n  messages: [] //require('./__fixtures__/messages').default.messages\n};\n\nexport default handleActions(\n  {\n    [selfPeerInfo]: (state, { payload }) => ({\n      ...state,\n      ...payload\n    }),\n    [chatMessageReceived]: (state, { payload }) => ({\n      ...state,\n      messages: [...state.messages, payload]\n    }),\n    [playerProfileUpdated]: (state, { payload }) => ({\n      ...state,\n      players: {\n        ...state.players,\n        [payload.peerId]: {\n          ...payload\n        }\n      }\n    }),\n    [gameInvitationAccepted]: (state, { payload }) => ({\n      ...state,\n      game: {\n        ...payload\n      }\n    }),\n    [gameInvitationRecieved]: (state, { payload }) => ({\n      ...state,\n      invitation: {\n        ...payload\n      }\n    })\n  },\n  initialState\n);\n","import { connect } from \"react-redux\";\n\nimport * as actions from \"./actions\";\n\nexport default connect(\n  ({ go, router }) => ({ go, router }),\n  {\n    ...actions\n  }\n);\n","import { withHandlers } from \"recompose\";\nimport { history } from \"../index\";\n\nexport default withHandlers({\n  navigateTo: () => async ({ path }) => {\n    history.push(path);\n  },\n  sendMessage: () => async ({ room, payload }) => {\n    const message = JSON.stringify({\n      action: \"chat:message:sent\",\n      payload\n    });\n    await room.broadcast(message);\n  },\n  updatePlayerProfile: () => async ({ room, payload }) => {\n    const message = JSON.stringify({\n      action: \"lobby:player:profileUpdated\",\n      payload\n    });\n    await room.broadcast(message);\n  },\n  saveDTO: () => async ({ db, room, dto, opponent }) => {\n    await db.put({\n      _id: \"dto:latest\",\n      ...dto\n    });\n    const message = JSON.stringify({\n      action: \"game:dto:saved\",\n      payload: {\n        dto\n      }\n    });\n    await room.sendTo(opponent, message);\n    // alert(\"dto saved.\");\n  },\n  deleteDTO: () => async ({ db, room, dto, opponent }) => {\n    await db.del(\"dto:latest\");\n    const message = JSON.stringify({\n      action: \"game:dto:deleted\",\n      payload: {\n        dto\n      }\n    });\n    await room.sendTo(opponent, message);\n    // alert(\"dto deleted.\");\n  },\n  sendGameInvite: ({ gameInvitationAccepted }) => async ({ room, payload }) => {\n    const message = JSON.stringify({\n      action: \"game:invite\",\n      payload\n    });\n    room.sendTo(payload.to, message);\n  },\n  acceptGameInvite: ({ gameInvitationAccepted }) => async ({\n    room,\n    payload\n  }) => {\n    const message = JSON.stringify({\n      action: \"game:invite:accepted\",\n      payload\n    });\n    // you are player 0, they are player 1\n    // todo: establish colors and initialize game deterministically from invite.\n    room.sendTo(payload.players[1], message);\n    gameInvitationAccepted(payload);\n  }\n});\n","import * as actions from \"./actions\";\nimport reducer from \"./reducer\";\nimport container from \"./container\";\n\nexport default {\n  actions,\n  reducer,\n  container\n};\n","import { compose } from 'recompose';\n\nimport withRedux from './redux';\nimport withHandlers from './handlers';\n\nexport default compose(\n  withRedux,\n  withHandlers,\n);","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport { createBrowserHistory } from \"history\";\nimport { connectRouter, routerMiddleware } from \"connected-react-router\";\n\nimport storage from \"redux-persist/lib/storage\";\n\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\n\nimport go from \"./go\";\n\nexport const history = createBrowserHistory();\n\nconst rootReducer = {\n  go: go.reducer,\n  router: connectRouter(history)\n};\n\nexport default appReducers => {\n  // Persistance configuration\n  const persistConfig = {\n    key: \"root\",\n    blacklist: [\"go\"],\n    storage\n  };\n\n  // Store.\n  const store = createStore(\n    persistReducer(\n      persistConfig,\n      combineReducers({ ...rootReducer, ...appReducers })\n    ),\n    composeWithDevTools(applyMiddleware(thunk, routerMiddleware(history)))\n  );\n\n  // Persistor.\n  const persistor = persistStore(store);\n  return {\n    store,\n    persistor,\n    history\n  };\n};\n","import React, { Component } from \"react\";\n\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/lib/integration/react\";\nimport createStore from \"../../store\";\n\nimport { Route, Switch } from \"react-router\"; // react-router v4\nimport { ConnectedRouter } from \"connected-react-router\";\n\nimport \"./App.css\";\n\nimport { GamePage, LandingPage, LobbyPage } from \"../index\";\n\nconst { store, persistor, history } = createStore();\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <PersistGate persistor={persistor}>\n          <ConnectedRouter history={history}>\n            <Switch>\n              <Route exact path=\"/\" render={() => <LandingPage />} />\n              <Route exact path=\"/lobby\" render={() => <LobbyPage />} />\n              <Route path=\"/game\" render={() => <GamePage />} />\n              {/* <Route exact path=\"/game\" render={() => <GamePage />} /> */}\n              <Route render={() => <div>Miss</div>} />\n            </Switch>\n          </ConnectedRouter>\n        </PersistGate>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import App from \"./App\";\nexport default App;\n","import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\nimport Particles from \"react-particles-js\";\n\nclass LandingPage extends Component {\n  render() {\n    return (\n      <div className=\"LandingPage\">\n        <Particles\n          className=\"Particles\"\n          params={{\n            fps_limit: 28,\n            particles: {\n              number: {\n                value: 200,\n                density: {\n                  enable: false\n                }\n              },\n              line_linked: {\n                enable: true,\n                distance: 30,\n                opacity: 0.4\n              },\n              move: {\n                speed: 1\n              },\n              opacity: {\n                anim: {\n                  enable: true,\n                  opacity_min: 0.05,\n                  speed: 2,\n                  sync: false\n                },\n                value: 0.4\n              }\n            },\n            polygon: {\n              enable: true,\n              scale: 0.9,\n              type: \"inline\",\n              move: {\n                radius: 10\n              },\n              url: \"./deer.svg\",\n              inline: {\n                arrangement: \"equidistant\"\n              },\n              draw: {\n                enable: true,\n                stroke: {\n                  color: \"rgba(255, 255, 255, .2)\"\n                }\n              }\n            },\n            retina_detect: false,\n            interactivity: {\n              events: {\n                onhover: {\n                  enable: true,\n                  mode: \"bubble\"\n                }\n              },\n              modes: {\n                bubble: {\n                  size: 6,\n                  distance: 40\n                }\n              }\n            }\n          }}\n        />\n\n        <Button\n          id=\"JoinLobby\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={async () => {\n            this.props.navigateTo({\n              path: \"/lobby\"\n            });\n          }}\n        >\n          Enter Lobby\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default LandingPage;\n","import LandingPage from \"./LandingPage\";\n\nimport go from \"../../store/go\";\n\nexport default go.container(LandingPage);\n","const ipfsOptions = {\n  repo: \"/orbitdb/go\",\n  // start: true,\n  EXPERIMENTAL: {\n    pubsub: true\n  },\n  config: {\n    Addresses: {\n      Swarm: [\n        // Use IPFS dev signal server\n        // \"/dns4/star-signal.cloud.ipfs.team/wss/p2p-webrtc-star\"\n        // \"/dns4/ws-star.discovery.libp2p.io/tcp/443/wss/p2p-websocket-star\"\n        \"/dns4/ws-star.discovery.libp2p.io/tcp/443/wss/p2p-websocket-star\"\n        // Use local signal server\n        // '/ip4/0.0.0.0/tcp/9090/wss/p2p-webrtc-star',\n      ]\n    }\n  }\n};\n\nconst ipfs = new window.Ipfs(ipfsOptions);\n\nconst getIPFS = () => {\n  if (window.ipfs) {\n    return Promise.resolve(window.ipfs);\n  }\n  return new Promise((resolve, reject) => {\n    ipfs.on(\"ready\", async () => {\n      window.ipfs = ipfs;\n      resolve(ipfs);\n    });\n  });\n};\n\nexport default getIPFS;\n","import getIPFS from \"./ipfs-helpers\";\n\nconst OrbitDB = require(\"orbit-db\");\n\nconst getOrbitDB = async () => {\n  if (window.orbitdb) {\n    return Promise.resolve(window.orbitdb);\n  }\n\n  const ipfs = await getIPFS();\n  const orbitOptions = undefined;\n  const orbitdb = new OrbitDB(ipfs, \"./orbitdb\", orbitOptions);\n  if (!window.orbitdb) {\n    window.orbitdb = orbitdb;\n  }\n  return Promise.resolve(window.orbitdb);\n};\n\nexport { getOrbitDB };\n","import _ from \"lodash\";\n\nvar playHistoryX = [];\nvar playHistoryY = [];\n\nclass Board {\n  static EMPTY = 0;\n  static BLACK = 1;\n  static WHITE = 2;\n\n  constructor({\n    size,\n    board,\n    last_move_passed,\n    in_atari,\n    attempted_suicide,\n    history,\n    captures,\n    capturesArrayBlack,\n    capturesArrayWhite,\n    moveCount,\n    moveCountArray,\n    last_move_undo,\n    current_color\n  }) {\n    if (size) {\n      this.size = size;\n      this.board = this.create_board(size);\n    }\n    if (board) {\n      this.size = board[0].length;\n      this.board = board;\n    }\n    this.current_color = current_color || Board.BLACK;\n    this.last_move_passed = last_move_passed || false;\n    this.in_atari = in_atari || false;\n    this.attempted_suicide = attempted_suicide || false;\n    this.history = history || [];\n    this.captures = captures || [];\n    this.capturesArrayBlack = capturesArrayBlack || [];\n    this.capturesArrayWhite = capturesArrayWhite || [];\n    this.moveCount = moveCount || 0;\n    this.moveCountArray = moveCountArray || [];\n    this.last_move_undo = last_move_undo || false;\n  }\n\n  getDataTransferObject = () => {\n    return {\n      ...JSON.parse(JSON.stringify(this))\n    };\n  };\n\n  /*\n   * Returns a size x size matrix with all entries initialized to Board.EMPTY\n   */\n  create_board = function(size) {\n    var m = [];\n    for (var i = 0; i < size; i++) {\n      m[i] = [];\n      for (var j = 0; j < size; j++) m[i][j] = Board.EMPTY;\n    }\n    return m;\n  };\n\n  reset = function() {\n    this.current_color = Board.BLACK;\n    this.board = this.create_board(this.size);\n    this.last_move_passed = false;\n    this.in_atari = false;\n    this.attempted_suicide = false;\n    this.history = [];\n    this.captures = [];\n    this.moveCount = 0;\n    this.moveCountArray = [];\n    this.last_move_undo = false;\n  };\n\n  /*\n   * Switches the current player\n   */\n  switch_player = function() {\n    this.current_color =\n      this.current_color === Board.BLACK ? Board.WHITE : Board.BLACK;\n  };\n\n  /*\n   * At any point in the game, a player can pass and let his opponent play\n   */\n  pass = function() {\n    if (this.last_move_passed) this.end_game();\n    this.last_move_passed = true;\n    this.switch_player();\n  };\n\n  /*\n   * At any point in the game, a player can undo and let his opponent play\n   */\n  undo = function() {\n    if (this.history.length) {\n      const { board, current_color } = this.history.pop();\n      this.board = board;\n      this.current_color = current_color;\n      // console.log(\"board undo\", this);\n    } else {\n      // console.log(\"no history\");\n    }\n  };\n\n  /*\n   * Called when the game ends (both players passed)\n   */\n  end_game = function() {\n    // console.log(\"GAME OVER\");\n  };\n\n  is_valid_state = function(history) {\n    // console.log(\"history length \" + this.history.length);\n    const state = JSON.stringify(this.board);\n    // console.log(\"Im checking if current state is valid\");\n    for (\n      var n = 0;\n      this.moveCountArray[this.moveCountArray.length - 1] >\n        this.moveCountArray[this.moveCountArray.length - 2] &&\n      this.moveCount > 0 &&\n      n < history.length;\n      n = n + 1\n    ) {\n      if (JSON.stringify(history[n].board) === state) {\n        // console.log(\"INVALIDDDD\");\n        return false;\n      }\n    }\n    return true;\n  };\n\n  /*\n   * Attempt to place a stone at (i,j). Returns true iff the move was legal\n   */\n  play = function(i, j) {\n    playHistoryX.push(i);\n    playHistoryY.push(j);\n    this.moveCount++;\n    // console.log(this.moveCount);\n    this.moveCountArray.push(this.moveCount);\n    // console.log(\"Played at \" + i + \", \" + j);\n    this.attempted_suicide = this.in_atari = false;\n    if (\n      playHistoryX[playHistoryX.length - 1] ===\n        playHistoryX[playHistoryX.length - 2] &&\n      playHistoryY[playHistoryY.length - 1] ===\n        playHistoryY[playHistoryY.length - 2]\n    ) {\n      // console.log(\"ko rule\");\n      this.moveCount--;\n      return false;\n    }\n    if (this.board[i][j] !== Board.EMPTY) {\n      // console.log(\"INVALID MOVE\");\n      return false;\n    }\n    var color = (this.board[i][j] = this.current_color);\n    var captured = [];\n    var neighbors = this.get_adjacent_intersections(i, j);\n    var atari = false;\n\n    var self = this;\n    _.each(neighbors, function(n) {\n      var state = self.board[n[0]][n[1]];\n      if (state !== Board.EMPTY && state !== color) {\n        var group = self.get_group(n[0], n[1]);\n        // console.log(group);\n        if (group[\"liberties\"] === 0) captured.push(group);\n        else if (group[\"liberties\"] === 1) atari = true;\n      }\n    });\n\n    var turnBlack = 0;\n    var turnWhite = 0;\n\n    // detect suicide\n    if (_.isEmpty(captured) && this.get_group(i, j)[\"liberties\"] === 0) {\n      this.board[i][j] = Board.EMPTY;\n      this.attempted_suicide = true;\n      return false;\n    }\n\n    _.each(captured, function(group) {\n      _.each(group[\"stones\"], function(stone) {\n        self.board[stone[0]][stone[1]] = Board.EMPTY;\n        if (color === 1) {\n          turnBlack++;\n        } else if (color === 2) {\n          turnWhite++;\n        }\n      });\n    });\n    this.capturesArrayBlack.push(turnBlack);\n    this.capturesArrayWhite.push(turnWhite);\n\n    if (atari) this.in_atari = true;\n\n    this.last_move_passed = false;\n    this.switch_player();\n    const state = {\n      current_color: this.current_color,\n      board: _.cloneDeep(self.board)\n    };\n    this.history.push(state);\n    // console.log(\"history\", this.history);\n    return true;\n  };\n\n  /*\n   * Given a board position, returns a list of [i,j] coordinates representing\n   * orthagonally adjacent intersections\n   */\n  get_adjacent_intersections = function(i, j) {\n    var neighbors = [];\n    if (i > 0) neighbors.push([i - 1, j]);\n    if (j < this.size - 1) neighbors.push([i, j + 1]);\n    if (i < this.size - 1) neighbors.push([i + 1, j]);\n    if (j > 0) neighbors.push([i, j - 1]);\n    return neighbors;\n  };\n\n  /*\n   * Performs a breadth-first search about an (i,j) position to find recursively\n   * orthagonally adjacent stones of the same color (stones with which it shares\n   * liberties). Returns null for if there is no stone at the specified position,\n   * otherwise returns an object with two keys: \"liberties\", specifying the\n   * number of liberties the group has, and \"stones\", the list of [i,j]\n   * coordinates of the group's members.\n   */\n  get_group = function(i, j) {\n    var color = this.board[i][j];\n    if (color === Board.EMPTY) return null;\n\n    var visited = {}; // for O(1) lookups\n    var visited_list = []; // for returning\n    var queue = [[i, j]];\n    var count = 0;\n\n    let func = function(n) {\n      var state = self.board[n[0]][n[1]];\n      if (state === Board.EMPTY) count++;\n      if (state === color) queue.push([n[0], n[1]]);\n    };\n\n    while (queue.length > 0) {\n      var stone = queue.pop();\n      if (visited[stone]) continue;\n\n      var neighbors = this.get_adjacent_intersections(stone[0], stone[1]);\n      var self = this;\n\n      _.each(neighbors, func);\n\n      visited[stone] = true;\n      visited_list.push(stone);\n    }\n\n    return {\n      liberties: count,\n      stones: visited_list\n    };\n  };\n}\n\nexport default Board;\n","import React, { Component } from \"react\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport { getOrbitDB } from \"../../utils/orbit-helpers\";\n\nimport { PageNavigation, PlayerProfile, BoardView } from \"../index\";\n\nimport Board from \"../../utils/board\";\n\nconst Room = require(\"ipfs-pubsub-room\");\n\nconst BOARD_SIZE = 5;\n\nconst playerColorStringToInt = color => {\n  return color === \"black\" ? 1 : 2;\n};\n\nconst peerIdToProfileAttribute = (players, peerId, attr) => {\n  if (players && players[peerId]) {\n    return players[peerId][attr];\n  }\n  return \"\";\n};\n\nclass GamePage extends Component {\n  state = {\n    ready: false\n  };\n  async componentWillMount() {\n    const { router, selfPeerInfo, playerProfileUpdated } = this.props;\n    const { pathname } = router.location;\n    const orbitDBAddress = pathname.replace(\"/game\", \"\");\n    const roomName = orbitDBAddress.split(\"/\")[3];\n    const orbitdb = await getOrbitDB();\n    const peerInfo = await orbitdb._ipfs.id();\n    selfPeerInfo({ peerInfo });\n    const room = Room(orbitdb._ipfs, roomName);\n    this.orbitdb = orbitdb;\n    this.room = room;\n    this.peerId = peerInfo.id;\n    this.db = await orbitdb.open(orbitDBAddress);\n    await this.db.load();\n    const dto = await this.db.get(\"dto:latest\")[0];\n    // console.log(\"loaded dto: \", dto);\n    if (dto === undefined) {\n      this.board = new Board({ size: BOARD_SIZE });\n      const dto = this.board.getDataTransferObject();\n      await this.db.put({\n        _id: \"dto:latest\",\n        name: \"dto:latest\",\n        ...dto\n      });\n    } else {\n      this.board = new Board(dto);\n      // console.log(\"though it was loaded, it does not render...\", this.board);\n    }\n\n    room.on(\"peer joined\", async peer => {\n      // console.log(\"Peer joined the room\", peer);\n    });\n\n    room.on(\"peer left\", peer => {\n      // console.log(\"Peer left...\", peer);\n    });\n\n    // now started to listen to room\n    room.on(\"subscribed\", () => {\n      // console.log(\"Now connected!\");\n    });\n\n    room.on(\"message\", async message => {\n      const { action, payload } = JSON.parse(message.data);\n      console.log(\"message...\", message, action, payload);\n\n      if (action === \"lobby:player:profileUpdated\") {\n        playerProfileUpdated({\n          ...payload\n        });\n      }\n\n      if (action === \"game:dto:saved\") {\n        this.board = new Board(payload.dto);\n        this.setState({\n          board: this.board\n        });\n      }\n      if (action === \"game:dto:deleted\") {\n        this.board = new Board(payload.dto);\n        this.setState({\n          board: this.board\n        });\n      }\n    });\n\n    const pollTillPresent = setInterval(async () => {\n      const [opponent] = room.getPeers();\n\n      if (opponent) {\n        const players = [peerInfo.id, opponent].sort();\n        this.setState({\n          ready: true,\n          opponent,\n          you: peerInfo.id,\n          colors: {\n            [players[0]]: \"white\",\n            [players[1]]: \"black\"\n          }\n        });\n        clearInterval(pollTillPresent);\n      }\n    }, 1 * 1000);\n  }\n  render() {\n    const { go, saveDTO, deleteDTO } = this.props;\n    const { ready, colors, you, opponent } = this.state;\n\n    if (!ready) {\n      return <CircularProgress />;\n    }\n\n    return (\n      <div className=\"GamePage\">\n        <PageNavigation>\n          <Paper style={{ padding: \"16px\", marginBottom: \"16px\" }}>\n            <PlayerProfile room={this.room} peerId={this.peerId} />\n          </Paper>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={async () => {\n              saveDTO({\n                room: this.room,\n                db: this.db,\n                dto: this.board.getDataTransferObject(),\n                opponent\n              });\n            }}\n          >\n            Save Game\n          </Button>\n          &nbsp;\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={async () => {\n              this.board = new Board({ size: BOARD_SIZE });\n              const dto = this.board.getDataTransferObject();\n              await this.db.put({\n                _id: \"dto:latest\",\n                name: \"dto:latest\",\n                ...dto\n              });\n              this.setState({\n                board: this.board\n              });\n\n              deleteDTO({\n                room: this.room,\n                db: this.db,\n                dto,\n                opponent\n              });\n            }}\n          >\n            Reset Game\n          </Button>\n          <h3>\n            You are {colors[you]},{\" \"}\n            {peerIdToProfileAttribute(go.players, opponent, \"playerName\")} is{\" \"}\n            {colors[opponent]}\n          </h3>\n          <h3>\n            It is {\" \"}\n            {this.board.current_color === playerColorStringToInt(colors[you])\n              ? \"your turn\"\n              : `${peerIdToProfileAttribute(go.players, opponent, \"playerName\")}'s turn`}\n          </h3>\n          <BoardView\n            currentPlayer={playerColorStringToInt(colors[you])}\n            board={this.board}\n            onPlay={board => {\n              this.board = board;\n              // really any state update will cause a re-render after assignment..\n              this.setState({\n                board\n              });\n              saveDTO({\n                room: this.room,\n                db: this.db,\n                dto: this.board.getDataTransferObject(),\n                opponent\n              });\n            }}\n          />\n        </PageNavigation>\n      </div>\n    );\n  }\n}\n\nexport default GamePage;\n","import GamePage from \"./GamePage\";\n\nimport go from \"../../store/go\";\n\nexport default go.container(GamePage);\n","import React, { Component } from \"react\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport getIPFS from \"../../utils/ipfs-helpers\";\n\nimport { getOrbitDB } from \"../../utils/orbit-helpers\";\n\nimport Button from \"@material-ui/core/Button\";\n\nimport {\n  PageNavigation,\n  PlayerProfile,\n  NewGameDialog,\n  IPFSPubSubChat\n} from \"../index\";\n\nconst Room = require(\"ipfs-pubsub-room\");\n\nconst peerIdToProfileAttribute = (players, peerId, attr) => {\n  if (players && players[peerId]) {\n    return players[peerId][attr];\n  }\n  return peerId;\n};\n\nclass LobbyPage extends Component {\n  state = {\n    peers: []\n  };\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value\n    });\n  };\n  async componentWillMount() {\n    // console.log(this.props);\n    const {\n      selfPeerInfo,\n      playerProfileUpdated,\n      gameInvitationRecieved,\n      navigateTo\n    } = this.props;\n    const ipfs = await getIPFS();\n    const orbitdb = await getOrbitDB();\n    const peerInfo = await ipfs.id();\n    this.peerInfo = peerInfo;\n\n    selfPeerInfo({ peerInfo });\n    this.roomName = \"go.lobby\";\n    const room = Room(ipfs, this.roomName);\n    this.room = room;\n    this.ipfs = ipfs;\n    this.orbitdb = orbitdb;\n\n    // room.on(\"peer left\", peer => {\n    //   console.log(\"Peer left...\", peer);\n    // });\n\n    // now started to listen to room\n    // room.on(\"subscribed\", () => {\n    //   console.log(\"Now connected!\");\n    // });\n\n    room.on(\"message\", async message => {\n      const parsedMessage = JSON.parse(message.data);\n      // console.log(parsedMessage);\n      if (parsedMessage.action === \"lobby:player:profileUpdated\") {\n        playerProfileUpdated({\n          ...parsedMessage.payload\n        });\n      }\n      if (parsedMessage.action === \"game:invite\") {\n        gameInvitationRecieved({\n          from: message.from,\n          ...parsedMessage.payload\n        });\n      }\n      if (parsedMessage.action === \"game:invite:accepted\") {\n        // TODO update permissions to restrict players only\n        const newGameDB = await orbitdb.create(\n          `go.game.${parsedMessage.payload.nonce}`,\n          \"docstore\",\n          {\n            replicate: true,\n            overwrite: true,\n            write: [\"*\"]\n          }\n        );\n        const gameAddress = newGameDB.address.toString();\n        navigateTo({\n          path: `/game${gameAddress}`\n        });\n      }\n    });\n\n    setInterval(async () => {\n      this.setState({\n        peers: room.getPeers()\n      });\n    }, 5 * 1000);\n  }\n  render() {\n    const { peers } = this.state;\n    const { go, sendGameInvite } = this.props;\n\n    const { players } = go;\n\n    const isProfileReady = this.room && this.peerInfo.id;\n    const isLobbyReady = this.room && peers.length > 0;\n\n    // console.log(\"lobby render.\");\n\n    return (\n      <div className=\"LobbyPage\">\n        <PageNavigation>\n          <Grid container spacing={24}>\n            <Grid item xs={12}>\n              <Paper style={{ padding: \"16px\" }}>\n                {!isProfileReady && <CircularProgress />}\n                {isProfileReady && (\n                  <PlayerProfile room={this.room} peerId={this.peerInfo.id} />\n                )}\n              </Paper>\n            </Grid>\n\n            <Grid item xs={12} md={6}>\n              <Paper style={{ padding: \"16px\" }}>\n                {!isLobbyReady && <CircularProgress />}\n                {isLobbyReady && (\n                  <div>\n                    <h3> Ask for a game with: </h3>\n                    {peers.map(peerId => {\n                      return (\n                        <div key={peerId}>\n                          <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={async () => {\n                              const payload = {\n                                to: peerId\n                              };\n                              sendGameInvite({ room: this.room, payload });\n                            }}\n                          >\n                            {peerIdToProfileAttribute(\n                              players,\n                              peerId,\n                              \"playerEmoji\"\n                            )}\n                            &nbsp;{\" \"}\n                            {peerIdToProfileAttribute(\n                              players,\n                              peerId,\n                              \"playerName\"\n                            )}\n                          </Button>\n                        </div>\n                      );\n                    })}\n                  </div>\n                )}\n              </Paper>\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <Paper style={{ padding: \"16px\" }}>\n                {!isLobbyReady && <CircularProgress />}\n                {isLobbyReady && <IPFSPubSubChat room={this.room} />}\n              </Paper>\n            </Grid>\n          </Grid>\n          <NewGameDialog room={this.room} orbitdb={this.orbitdb} />\n        </PageNavigation>\n      </div>\n    );\n  }\n}\n\nexport default LobbyPage;\n","import LobbyPage from \"./LobbyPage\";\n\nimport go from \"../../store/go\";\n\nexport default go.container(LobbyPage);\n","import BoardIntersection from \"./BoardIntersection\";\nexport default BoardIntersection;\n","import React, { Component } from \"react\";\n\nimport Board from \"../../utils/board\";\n\nimport { GRID_SIZE } from \"../../constants\";\n\nclass BoardIntersection extends Component {\n  handleClick = () => {\n    if (this.props.currentPlayer !== this.props.board.current_color){\n      console.log('not your turn!!!')\n      return;\n    }\n    if (this.props.board.play(this.props.row, this.props.col))\n      this.props.onPlay(this.props.board);\n  };\n  render() {\n    var style = {\n      top: this.props.row * GRID_SIZE,\n      left: this.props.col * GRID_SIZE,\n      backgroundColor:\n        this.props.color !== Board.EMPTY\n          ? this.props.color === Board.BLACK\n            ? window._PLAYER_ONE_COLOR\n            : window._PLAYER_TWO_COLOR\n          : undefined,\n      backgroundImage:\n        this.props.color !== Board.EMPTY\n          ? this.props.color === Board.BLACK\n            ? window._PLAYER_ONE_IMAGE\n            : window._PLAYER_TWO_IMAGE\n          : undefined\n    };\n\n    var classes = \"intersection\";\n    if (this.props.color !== Board.EMPTY)\n      classes += this.props.color === Board.BLACK ? \" black\" : \" white\";\n\n    return <div onClick={this.handleClick} className={classes} style={style} />;\n  }\n}\n\nexport default BoardIntersection;\n","export const GRID_SIZE = 40;\n","import BoardView from \"./BoardView\";\nexport default BoardView;\n","import React, { Component } from \"react\";\n\nimport { BoardIntersection } from \"../index\";\n\nimport { GRID_SIZE } from \"../../constants\";\n\nclass BoardView extends Component {\n  render() {\n    const { board } = this.props;\n    var intersections = [];\n    for (var i = 0; i < board.size; i++)\n      for (var j = 0; j < board.size; j++)\n        intersections.push(\n          <BoardIntersection\n            key={`${i}-${j}`}\n            {...{\n              board: board,\n              color: board.board[i][j],\n              row: i,\n              col: j,\n              currentPlayer: this.props.currentPlayer,\n              onPlay: this.props.onPlay\n            }}\n          />\n        );\n    var style = {\n      width: board.size * GRID_SIZE,\n      height: board.size * GRID_SIZE\n    };\n    return (\n      <div style={style} id=\"board\">\n        {intersections}\n      </div>\n    );\n  }\n}\n\nexport default BoardView;\n","import PassView from \"./PassView\";\nexport default PassView;\n","import React, { Component } from \"react\";\n\nclass PassView extends Component {\n  handleClick = e => {\n    this.props.board.pass();\n  };\n  render() {\n    return (\n      <input\n        id=\"pass-btn\"\n        type=\"button\"\n        value=\"Pass\"\n        onClick={this.handleClick}\n      />\n    );\n  }\n}\n\nexport default PassView;\n","import NewGame from \"./NewGame\";\nexport default NewGame;\n","import React, { Component } from \"react\";\n\nclass NewGame extends Component {\n  handleClick = e => {\n    window.location.reload(false);\n    this.props.board.reset();\n    this.props.onReset();\n  };\n\n  render() {\n    return (\n      <input\n        id=\"newgame-btn\"\n        type=\"button\"\n        value=\"New Game\"\n        onClick={this.handleClick}\n      />\n    );\n  }\n}\n\nexport default NewGame;\n","import CapturesView from \"./CapturesView\";\n\nexport default CapturesView;\n","import React, { Component } from \"react\";\n\nclass CapturesView extends Component {\n  render() {\n    let capturesArray =\n      this.props.color === \"black\"\n        ? this.props.board.capturesArrayBlack\n        : this.props.board.capturesArrayWhite;\n    var textCaptures =\n      `Captures by ${this.props.color}: ` +\n      capturesArray.reduce((a, b) => a + b, 0);\n    return <div id=\"alerts\">&nbsp;{textCaptures}&nbsp;</div>;\n  }\n}\n\nexport default CapturesView;\n","import React, { Component } from \"react\";\n// import _ from \"lodash\";\n\nimport { BoardView, PassView, NewGame, CapturesView } from \"../index\";\n\nclass ContainerView extends Component {\n\n  componentWillMount() {\n    console.log('container view mount....',)\n    this.setState({\n      board: this.props.board,\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log('container view receive props....',)\n    this.setState({\n      board: nextProps.board\n    });\n  }\n\n  onBoardUpdate() {\n    // if (this.state.board.is_valid_state(this.state.history)) {\n    //   let history = this.state.history;\n    //   history.push(_.cloneDeep(this.state.board));\n    //   this.setState({ board: this.state.board, history: history });\n    //   console.log(\"board was updated and component shall render\");\n    // } else {\n    //   console.log(\"invalid move, reset to prior state\");\n    //   console.log(this.state.history.length);\n    //   var last = this.state.history[this.state.history.length - 1];\n    //   console.log(\"set board to\", last);\n    //   this.setState({ board: last });\n    //   this.state.history.pop();\n    //   console.log(this.state.history.length);\n    // }\n  }\n\n  undo = () => {\n    // var { history } = this.state;\n    // if (history.length <= 1) {\n    //   window.location.reload(false);\n    //   console.log(\"nothing to undo\");\n    //   return;\n    // }\n    // console.log(\"popping:\", history.pop());\n    // var last = history[history.length - 1];\n    // console.log(\"set board to\", last);\n    // this.setState({ board: last, history: history });\n    // this.props.board.capturesArrayBlack.pop();\n    // this.props.board.capturesArrayWhite.pop();\n    // this.moveCount--;\n    // console.log(\"board was updated and component shall render\");\n\n    // console.log(\"undo...\", this.state.history, this.state.board);\n  };\n\n  render() {\n    return (\n      <div className=\"ContainerView\">\n        <div className=\"ContainerViewBoard\">\n          <BoardView\n            board={this.state.board}\n            onPlay={this.onBoardUpdate.bind(this)}\n          />\n        </div>\n\n        <div className=\"ContainerViewSidebar\">\n          <a href=\"https://github.com/L1zz13/G0/\">Source Code</a>\n          <CapturesView board={this.state.board} color={\"black\"} />\n          <CapturesView board={this.state.board} color={\"white\"} />\n          <PassView board={this.state.board} />\n          <br />\n          <br />\n          <NewGame\n            board={this.state.board}\n            onReset={this.onBoardUpdate.bind(this)}\n          />\n          <br />\n          <br />\n          <button onClick={this.undo}>Undo</button>\n          <br />\n          <br />\n\n          <p>\n            Select Player 1 Color: <br />\n            <select\n              name=\"playerOneColor\"\n              onChange={e => {\n                console.log(e.target.value);\n                window._PLAYER_ONE_COLOR = e.target.value;\n              }}\n            >\n              <option name=\"default\" value=\"#5632a8\">\n                default\n              </option>\n              <option name=\"black\" value=\"#000000\">\n                black\n              </option>\n              <option name=\"red\" value=\"#D0112E\">\n                red\n              </option>\n              <option name=\"blue\" value=\"#4B98F9\">\n                blue\n              </option>\n              <option name=\"orange\" value=\"#FD9D16\">\n                orange\n              </option>\n            </select>\n          </p>\n          <p>\n            Select Player 2 Color: <br />\n            <select\n              name=\"playerTwoColor\"\n              onChange={e => {\n                console.log(e);\n                window._PLAYER_TWO_COLOR = e.target.value;\n              }}\n            >\n              <option name=\"default\" value=\"#fbfbca\">\n                default\n              </option>\n              <option name=\"default\" value=\"#ffffff\">\n                white\n              </option>\n              <option name=\"pale blue\" value=\"#C1F0FE\">\n                pale blue\n              </option>\n              <option name=\"lavender\" value=\"#E4C2FD\">\n                lavender\n              </option>\n              <option name=\"green\" value=\"#A1FD98\">\n                green\n              </option>\n            </select>\n          </p>\n\n          <p>\n            Select Player 1 Emoji: <br />\n            <select\n              name=\"playerOneImage\"\n              onChange={e => {\n                console.log(e.target.value);\n                window._PLAYER_ONE_IMAGE = e.target.value;\n              }}\n            >\n              <option name=\"default\" value=\"\">\n                none\n              </option>\n              <option\n                name=\"1\"\n                value=\"url('http://pages.kwanzoo.com/rs/358-EUI-570/images/pusheen-cat-donuts-black-small-2.png')\"\n              >\n                donut pusheen\n              </option>\n              <option\n                name=\"2\"\n                value=\"url('http://pages.kwanzoo.com/rs/358-EUI-570/images/pusheen-squid-black-SMALL.png')\"\n              >\n                squid pusheen\n              </option>\n              <option\n                name=\"3\"\n                value=\"url('http://pages.kwanzoo.com/rs/358-EUI-570/images/happyface-black-small-3.png')\"\n              >\n                happy face\n              </option>\n            </select>{\" \"}\n          </p>\n          <p>\n            Select Player 2 Emoji: <br />\n            <select\n              name=\"playerTwoImage\"\n              onChange={e => {\n                console.log(e.target.value);\n                window._PLAYER_TWO_IMAGE = e.target.value;\n              }}\n            >\n              <option name=\"default\" value=\"\">\n                none\n              </option>\n              <option\n                name=\"1\"\n                value=\"url('http://pages.kwanzoo.com/rs/358-EUI-570/images/pusheen-cat-cat-SMOL.png')\"\n              >\n                cat pusheen\n              </option>\n              <option\n                name=\"2\"\n                value=\"url('http://pages.kwanzoo.com/rs/358-EUI-570/images/pusheen-art-SMOL.png')\"\n              >\n                art pusheen\n              </option>\n              <option\n                name=\"3\"\n                value=\"url('http://pages.kwanzoo.com/rs/358-EUI-570/images/upside-down-happy-SMALL.png')\"\n              >\n                happy face\n              </option>\n            </select>\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ContainerView;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\n\nconst peerIdToProfileAttribute = (players, peerId, attr) => {\n  if (players && players[peerId]) {\n    return players[peerId][attr];\n  }\n  return \"\";\n};\n\nclass NewGameDialog extends React.Component {\n  state = {\n    open: false\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      nextProps.go.invitation &&\n      nextProps.go.invitation.from &&\n      !Object.keys(nextProps.go.game).length\n    ) {\n      this.setState({\n        from: nextProps.go.invitation.from,\n        open: true\n      });\n    } else {\n      this.setState({\n        open: false\n      });\n    }\n  }\n\n  render() {\n    const { go, room, acceptGameInvite, navigateTo } = this.props;\n    const { from, open } = this.state;\n    return (\n      <div>\n        <Dialog\n          open={open}\n          onClose={this.handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Game Invite\"}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Invitation from {peerIdToProfileAttribute(go.players, from, 'playerName')}.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button\n              onClick={() => {\n                this.setState({ open: false });\n              }}\n              color=\"primary\"\n            >\n              Reject\n            </Button>\n            <Button\n              onClick={async () => {\n                const nonce = Math.random().toString(16);\n                acceptGameInvite({\n                  room,\n                  payload: {\n                    nonce,\n                    players: [go.peerInfo.id, go.invitation.from]\n                  }\n                });\n\n                const newGameDB = await this.props.orbitdb.create(\n                  `go.game.${nonce}`,\n                  \"docstore\",\n                  {\n                    replicate: true,\n                    overwrite: true,\n                    write: [\"*\"]\n                  }\n                );\n\n                const gameAddress = newGameDB.address.toString();\n\n                navigateTo({\n                  path: `/game${gameAddress}`\n                });\n              }}\n              color=\"primary\"\n              autoFocus\n            >\n              Accept\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default NewGameDialog;\n","import NewGameDialog from \"./NewGameDialog\";\nimport go from \"../../store/go\";\n\nexport default go.container(NewGameDialog);\n","import React, { Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst peerIdToProfileAttribute = (players, peerId, attr) => {\n  if (players && players[peerId]) {\n    return players[peerId][attr];\n  }\n  return \"\";\n};\n\nclass IPFSPubSubChat extends Component {\n  state = {\n    content: \"\",\n    messages: []\n  };\n  componentWillMount() {\n    const { room, chatMessageReceived } = this.props;\n    room.on(\"message\", async message => {\n      const parsedMessage = JSON.parse(message.data);\n      if (parsedMessage.action === \"chat:message:sent\") {\n        const chatMessage = {\n          ...parsedMessage.payload,\n          from: message.from\n        };\n        chatMessageReceived(chatMessage);\n      }\n    });\n  }\n\n  scrollToBottomOfChat = () => {\n    setTimeout(() => {\n      if (!document.querySelector(\".chatContainer\")) {\n        return;\n      }\n      document.querySelector(\n        \".chatContainer\"\n      ).scrollTop = document.querySelector(\".chatContainer\").scrollHeight;\n    }, 1 * 1000);\n  };\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value\n    });\n  };\n\n  sendMessage = () => {\n    this.props.sendMessage({\n      room: this.props.room,\n      payload: {\n        content: this.state.content,\n        timestamp: Math.round(new Date().getTime() / 1000)\n      }\n    });\n    this.setState({\n      content: \"\"\n    });\n  };\n\n  render() {\n    const { go } = this.props;\n    const { messages, players } = go;\n    return (\n      <div>\n        <h3>Chat</h3>\n        {!messages.length && <h5>No Messages</h5>}\n        <List\n          className=\"chatContainer\"\n          style={{\n            maxHeight: \"420px\",\n            overflowY: \"scroll\"\n          }}\n        >\n          {messages.map(m => {\n            const mood = peerIdToProfileAttribute(\n              players,\n              m.from,\n              \"playerEmoji\"\n            );\n            const name = peerIdToProfileAttribute(\n              go.players,\n              m.from,\n              \"playerName\"\n            );\n            return (\n              <ListItem key={m.timestamp} alignItems=\"flex-start\">\n                {mood}\n                <ListItemText\n                  primary={name}\n                  secondary={\n                    <React.Fragment>\n                      <Typography component=\"span\" color=\"textPrimary\">\n                        {m.content}\n                      </Typography>\n                    </React.Fragment>\n                  }\n                />\n              </ListItem>\n            );\n          })}\n          {this.scrollToBottomOfChat()}\n        </List>\n        <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n          <TextField\n            label=\"Message\"\n            fullWidth\n            value={this.state.content}\n            onChange={this.handleChange(\"content\")}\n            margin=\"normal\"\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            onClick={this.sendMessage}\n          >\n            Send\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default IPFSPubSubChat;\n","import IPFSPubSubChat from \"./IPFSPubSubChat\";\n\nimport go from \"../../store/go\";\n\nexport default go.container(IPFSPubSubChat);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport HomeOutlinedIcon from \"@material-ui/icons/HomeOutlined\";\nimport GamepadOutlinedIcon from \"@material-ui/icons/GamepadOutlined\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\"\n  },\n  drawer: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0\n    }\n  },\n  appBar: {\n    marginLeft: drawerWidth,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: `calc(100% - ${drawerWidth}px)`\n    }\n  },\n  menuButton: {\n    marginRight: 20,\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\"\n    }\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3\n  }\n});\n\nclass ResponsiveDrawer extends React.Component {\n  state = {\n    mobileOpen: false\n  };\n\n  handleDrawerToggle = () => {\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\n  };\n\n  render() {\n    const { classes, theme } = this.props;\n\n    const drawer = (\n      <div>\n        <div className={classes.toolbar} />\n        <Divider />\n        <List>\n          <ListItem\n            button\n            onClick={() => {\n              this.props.navigateTo({\n                path: \"/\"\n              });\n            }}\n          >\n            <ListItemIcon>\n              <HomeOutlinedIcon />\n            </ListItemIcon>\n            <ListItemText primary={\"Home\"} />\n          </ListItem>\n          <ListItem\n            button\n            onClick={() => {\n              this.props.navigateTo({\n                path: \"/lobby\"\n              });\n            }}\n          >\n            <ListItemIcon>\n              <GamepadOutlinedIcon />\n            </ListItemIcon>\n            <ListItemText primary={\"Lobby\"} />\n          </ListItem>\n        </List>\n      </div>\n    );\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar position=\"fixed\" className={classes.appBar}>\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n              onClick={this.handleDrawerToggle}\n              className={classes.menuButton}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              G0\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <nav className={classes.drawer}>\n          {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n          <Hidden smUp implementation=\"css\">\n            <Drawer\n              container={this.props.container}\n              variant=\"temporary\"\n              anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\n              open={this.state.mobileOpen}\n              onClose={this.handleDrawerToggle}\n              classes={{\n                paper: classes.drawerPaper\n              }}\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n          <Hidden xsDown implementation=\"css\">\n            <Drawer\n              classes={{\n                paper: classes.drawerPaper\n              }}\n              variant=\"permanent\"\n              open\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n        </nav>\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          {this.props.children}\n        </main>\n      </div>\n    );\n  }\n}\n\nResponsiveDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  // Injected by the documentation to work in an iframe.\n  // You won't need it on your project.\n  container: PropTypes.object,\n  theme: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(ResponsiveDrawer);\n","import PageNavigation from \"./PageNavigation\";\n\nimport go from \"../../store/go\";\n\nexport default go.container(PageNavigation);\n","import React, { Component } from \"react\";\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport _ from \"lodash\";\n\nconst moods = [\n  {\n    value: \"😀\",\n    label: \"😀\"\n  },\n  {\n    value: \"😅\",\n    label: \"😅\"\n  },\n  {\n    value: \"😇\",\n    label: \"😇\"\n  },\n  {\n    value: \"🤔\",\n    label: \"🤔\"\n  },\n  {\n    value: \"😰\",\n    label: \"😰\"\n  }\n];\n\nclass PlayerProfile extends Component {\n  state = {\n    playerName: \"\",\n    playerEmoji: \"😀\"\n  };\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value\n    });\n    if (name === \"playerName\" || name === \"playerEmoji\") {\n      this.safePlayerProfileUpdate();\n    }\n  };\n\n  sendProfileToPeers = () => {\n    this.props.updatePlayerProfile({\n      room: this.props.room,\n      payload: {\n        peerId: this.props.peerId,\n        playerName: this.state.playerName,\n        playerEmoji: this.state.playerEmoji\n      }\n    });\n  };\n\n  safePlayerProfileUpdate = _.debounce(async () => {\n    this.sendProfileToPeers();\n  }, 1 * 1000);\n\n  componentWillMount() {\n    const profile = {\n      peerId: this.props.peerId,\n      playerName: this.props.peerId.substring(2, 6) + \"...\",\n      playerEmoji: \"😀\"\n    };\n    this.setState({\n      ...profile\n    });\n\n    this.safePlayerProfileUpdate();\n    \n    this.props.room.on(\"peer joined\", async peer => {\n      console.log(\"Peer joined the room\", peer);\n      this.sendProfileToPeers();\n    });\n    this.props.room.on(\"subscribed\", () => {\n      // console.log(\"Now connected!\");\n      this.sendProfileToPeers();\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Your Profile</h3>\n        <TextField\n          id=\"standard-select-currency\"\n          select\n          label=\"Mood\"\n          value={this.state.playerEmoji}\n          onChange={this.handleChange(\"playerEmoji\")}\n          margin=\"normal\"\n        >\n          {moods.map(option => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n        &nbsp;&nbsp;\n        <TextField\n          label=\"Nickname\"\n          value={this.state.playerName}\n          onChange={this.handleChange(\"playerName\")}\n          margin=\"normal\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default PlayerProfile;\n","import PlayerProfile from \"./PlayerProfile\";\nimport go from \"../../store/go\";\nexport default go.container(PlayerProfile);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./components\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}